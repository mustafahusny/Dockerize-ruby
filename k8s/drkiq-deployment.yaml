apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: drkiq
  name: drkiq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: drkiq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: drkiq
    spec:
      containers:
      - env:
        - name: CACHE_URL
          value: redis:6379/0
        - name: DATABASE_URL
          value: postgresql://drkiq:test_db_password@postgres:5432/drkiq?encoding=utf8&pool=5&timeout=5000
        - name: GROUP_ID
          value: "1000"
        - name: JOB_WORKER_URL
          value: redis://redis:6379/0
        - name: LISTEN_ON
          value: 0.0.0.0:8010
        - name: SECRET_TOKEN
          value: Wa4Kdu6hMt3tYKm4jb9p4vZUuc7jBVFw
        - name: USER_ID
          value: "1000"
        - name: WORKER_PROCESSES
          value: "1"
        image: mustafahusny/dockerizing-ruby-drkiq
        imagePullPolicy: ""
        name: drkiq
        ports:
        - containerPort: 8010
        resources: {}
        volumeMounts:
        - mountPath: /opt/app/drkiq
          name: drkiq-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: drkiq-claim0
        persistentVolumeClaim:
          claimName: drkiq-claim0
status: {}
